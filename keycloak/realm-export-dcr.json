{
  "id": "mcp-realm",
  "realm": "mcp-realm",
  "displayName": "MCP Realm",
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": true,
  "editUsernameAllowed": false,
  "bruteForceProtected": true,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "defaultRole": {
    "id": "user",
    "name": "user",
    "description": "Default role for authenticated users",
    "composite": false,
    "clientRole": false,
    "containerId": "mcp-realm"
  },
  "requiredCredentials": ["password"],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": ["FreeOTP", "Google Authenticator"],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": ["ES256"],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "xContentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';"
  },
  "smtpServer": {},
  "eventsEnabled": true,
  "eventsListeners": ["jboss-logging"],
  "enabledEventTypes": [
    "SEND_RESET_PASSWORD",
    "UPDATE_CONSENT_ERROR",
    "LOGIN",
    "CLIENT_LOGIN",
    "LOGOUT",
    "REGISTER",
    "LOGOUT_ERROR",
    "LOGIN_ERROR",
    "CLIENT_LOGIN_ERROR",
    "REGISTER_ERROR",
    "UPDATE_PASSWORD",
    "UPDATE_PASSWORD_ERROR",
    "UPDATE_TOTP",
    "REMOVE_TOTP"
  ],
  "adminEventsEnabled": true,
  "adminEventsDetailsEnabled": true,
  "clientRegistrationPolicies": {
    "default": {
      "providers": [
        {
          "id": "allowed-client-scopes",
          "config": {
            "allow-default-scopes": ["true"]
          }
        },
        {
          "id": "allowed-protocol-mapper-types",
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-full-name-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "oidc-address-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-usermodel-attribute-mapper"
            ]
          }
        },
        {
          "id": "max-clients",
          "config": {
            "max-clients": ["200"]
          }
        },
        {
          "id": "consent-required",
          "config": {}
        },
        {
          "id": "full-scope-disabled",
          "config": {}
        },
        {
          "id": "protocol-mappers",
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-usermodel-property-mapper",
              "oidc-full-name-mapper",
              "oidc-address-mapper",
              "oidc-usermodel-attribute-mapper"
            ]
          }
        },
        {
          "id": "allowed-client-templates",
          "config": {}
        }
      ]
    }
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [],
  "authenticatorConfig": [],
  "requiredActions": [],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "parRequestUriLifespan": "60",
    "cibaInterval": "5"
  },
  "keycloakVersion": "26.3.2",
  "userManagedAccessAllowed": false,
  "clientScopes": [
    {
      "id": "mcp:read",
      "name": "mcp:read",
      "description": "Read access to MCP resources",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "Read MCP data"
      }
    },
    {
      "id": "mcp:write",
      "name": "mcp:write",
      "description": "Write access to MCP resources",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "Write MCP data"
      }
    },
    {
      "id": "mcp:infer",
      "name": "mcp:infer",
      "description": "Inference access to MCP resources",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "Run MCP inferences"
      }
    }
  ],
  "clients": [
    {
      "id": "initial-access-token-client",
      "clientId": "initial-access-token-client",
      "name": "Initial Access Token Client",
      "description": "Special client for creating initial access tokens",
      "enabled": true,
      "serviceAccountsEnabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "initial-access-token-secret",
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "publicClient": false,
      "protocol": "openid-connect"
    }
  ],
  "users": [
    {
      "id": "test-user",
      "username": "test",
      "email": "test@example.com",
      "emailVerified": true,
      "firstName": "Test",
      "lastName": "User",
      "enabled": true,
      "credentials": [
        {
          "type": "password",
          "value": "test123",
          "temporary": false
        }
      ],
      "realmRoles": ["user"]
    }
  ],
  "groups": [],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt",
    "mcp:read",
    "mcp:write",
    "mcp:infer"
  ]
} 