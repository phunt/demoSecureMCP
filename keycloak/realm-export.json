{
  "id": "mcp-realm",
  "realm": "mcp-realm",
  "displayName": "MCP Realm",
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": true,
  "editUsernameAllowed": false,
  "bruteForceProtected": true,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "defaultRole": {
    "id": "user",
    "name": "user",
    "description": "Default role for authenticated users",
    "composite": false,
    "clientRole": false,
    "containerId": "mcp-realm"
  },
  "requiredCredentials": ["password"],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": ["FreeOTP", "Google Authenticator"],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": ["ES256"],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": ["jboss-logging"],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "clientScopes": [
    {
      "id": "mcp-read-scope",
      "name": "mcp:read",
      "description": "Read access to MCP resources",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "gui.order": "1"
      }
    },
    {
      "id": "mcp-write-scope",
      "name": "mcp:write",
      "description": "Write access to MCP resources",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "gui.order": "2"
      }
    },
    {
      "id": "mcp-infer-scope",
      "name": "mcp:infer",
      "description": "Inference access to MCP resources",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "gui.order": "3"
      }
    }
  ],
  "clients": [
    {
      "id": "mcp-server",
      "clientId": "mcp-server",
      "name": "MCP Server",
      "description": "The MCP server itself (confidential client)",
      "rootUrl": "http://localhost:8000",
      "adminUrl": "http://localhost:8000",
      "baseUrl": "http://localhost:8000",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "mcp-server-secret-change-in-production",
      "redirectUris": ["http://localhost:8000/*"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml.client.signature": "false",
        "saml.authnstatement": "false",
        "require.pushed.authorization.requests": "false",
        "saml.onetimeuse.condition": "false",
        "client.secret.creation.time": "1680000000"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": ["openid", "profile", "email", "roles"],
      "optionalClientScopes": ["mcp:read", "mcp:write", "mcp:infer"]
    },
    {
      "id": "mcp-client",
      "clientId": "mcp-client",
      "name": "MCP Client",
      "description": "Public client for MCP access (PKCE required)",
      "rootUrl": "http://localhost:3000",
      "adminUrl": "",
      "baseUrl": "http://localhost:3000",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["http://localhost:3000/*", "http://localhost:3001/*"],
      "webOrigins": ["http://localhost:3000", "http://localhost:3001"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": true,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256",
        "post.logout.redirect.uris": "http://localhost:3000/*##http://localhost:3001/*",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "require.pushed.authorization.requests": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": ["openid", "profile", "email"],
      "optionalClientScopes": ["mcp:read", "mcp:write", "mcp:infer", "roles"]
    }
  ],
  "users": [
    {
      "id": "demo-user",
      "username": "demo",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Demo",
      "lastName": "User",
      "email": "demo@example.com",
      "credentials": [
        {
          "type": "password",
          "value": "demo123",
          "temporary": false
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["user"],
      "clientRoles": {},
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "admin-user",
      "username": "mcpadmin",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "MCP",
      "lastName": "Admin",
      "email": "admin@example.com",
      "credentials": [
        {
          "type": "password",
          "value": "admin123",
          "temporary": false
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["user"],
      "clientRoles": {},
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [],
  "clientScopeMappings": {},
  "roles": {
    "realm": [
      {
        "id": "user",
        "name": "user",
        "description": "User role",
        "composite": false,
        "clientRole": false,
        "containerId": "mcp-realm",
        "attributes": {}
      }
    ],
    "client": {}
  },
  "groups": [],
  "defaultDefaultClientScopes": ["openid", "profile", "email", "roles", "web-origins"],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "_browser_header.contentSecurityPolicyReportOnly": "",
    "_browser_header.xContentTypeOptions": "nosniff",
    "_browser_header.xRobotsTag": "none",
    "_browser_header.xFrameOptions": "SAMEORIGIN",
    "_browser_header.contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "_browser_header.xXSSProtection": "1; mode=block",
    "_browser_header.strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "keycloakVersion": "24.0.0",
  "userManagedAccessAllowed": false
} 