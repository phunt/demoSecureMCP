# Production Docker Compose configuration with secrets
# Usage: docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d

services:
  # MCP FastAPI Server with production settings
  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile.prod  # Use production Dockerfile with Gunicorn
    environment:
      # Container environment
      - CONTAINER_ENV=true
      
      # Application settings
      - APP_NAME=demoSecureMCP
      - APP_VERSION=${APP_VERSION:-1.0.0}
      - DEBUG=false
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
      
      # Server configuration  
      - HOST=0.0.0.0
      - PORT=8000
      - WORKERS=4  # Adjust based on CPU cores
      
      # External URLs (not used in container, but needed for reference)
      - EXTERNAL_BASE_URL=https://api.example.com
      - EXTERNAL_KEYCLOAK_URL=https://auth.example.com
      
      # Internal URLs (for container communication)
      - INTERNAL_MCP_URL=http://mcp-server:8000
      - INTERNAL_KEYCLOAK_URL=http://keycloak:8080
      - INTERNAL_REDIS_URL=redis://redis:6379/0
      
      # Public URLs (for external access)
      - PUBLIC_BASE_URL=https://api.example.com
      - PUBLIC_AUTH_URL=https://auth.example.com
      
      # Keycloak configuration
      - KEYCLOAK_REALM=mcp-realm
      - KEYCLOAK_CLIENT_ID=mcp-server
      # Client secret will be loaded from Docker secret
      
      # OAuth configuration (use production issuer)
      - OAUTH_ISSUER=https://auth.example.com/realms/mcp-realm
      - OAUTH_AUDIENCE=mcp-server
      - JWT_ALGORITHMS=RS256,RS384,RS512
      - JWT_LEEWAY=10
      
      # MCP configuration
      - MCP_RESOURCE_IDENTIFIER=https://api.example.com
      - MCP_SUPPORTED_SCOPES=mcp:read,mcp:write,mcp:infer
      
      # Redis configuration
      - REDIS_TTL=3600
      
      # Security settings
      - CORS_ORIGINS=https://app.example.com,https://admin.example.com
      - REQUIRE_HTTPS=true
      - HSTS_MAX_AGE=31536000
      
    secrets:
      - keycloak_client_secret
    # Override command to read secret from file
    command: >
      sh -c "
        export KEYCLOAK_CLIENT_SECRET=$$(cat /run/secrets/keycloak_client_secret) &&
        gunicorn src.app.main:app -c gunicorn.conf.py
      "
    
  # PostgreSQL with production settings
  postgres:
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      # Password from Docker secret
    secrets:
      - postgres_password
    command: >
      sh -c "
        export POSTGRES_PASSWORD=$$(cat /run/secrets/postgres_password) &&
        docker-entrypoint.sh postgres
      "
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/backup:/backup  # For backups
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
          
  # Keycloak with production settings
  keycloak:
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      # DB password will be loaded from secret
      KC_HOSTNAME: auth.example.com
      KC_HOSTNAME_STRICT: true
      KC_HOSTNAME_STRICT_HTTPS: true
      KC_HTTP_ENABLED: false
      KC_HTTPS_CERTIFICATE_FILE: /opt/keycloak/ssl/tls.crt
      KC_HTTPS_CERTIFICATE_KEY_FILE: /opt/keycloak/ssl/tls.key
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KC_LOG_LEVEL: INFO
      KC_PROXY: edge  # Behind reverse proxy
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      # Admin password from Docker secret
    command:
      - start
      - --optimized
    secrets:
      - keycloak_admin_password
      - postgres_password
    volumes:
      - keycloak_data:/opt/keycloak/data
      - ./keycloak/ssl:/opt/keycloak/ssl:ro  # SSL certificates
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
          
  # Redis with production settings
  redis:
    command: >
      redis-server 
      --appendonly yes 
      --maxmemory 512mb 
      --maxmemory-policy allkeys-lru
      --requirepass "$$(cat /run/secrets/redis_password)"
    secrets:
      - redis_password
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
          
  # Nginx with production SSL
  nginx:
    volumes:
      - ./nginx/conf.d/production.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro  # Let's Encrypt certificates
      - nginx_logs:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

# Define secrets
secrets:
  keycloak_client_secret:
    external: true
  postgres_password:
    external: true
  keycloak_admin_password:
    external: true
  redis_password:
    external: true 